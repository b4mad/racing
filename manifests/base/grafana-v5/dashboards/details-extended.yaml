apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: details-extended
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"
  datasources:
    - inputName: "DS_RACING"
      datasourceName: "Racing"
  folder: CrewChief
  # resyncPeriod: 30s
  json: >
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "id": 31,
      "links": [],
      "liveNow": true,
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 53,
          "panels": [],
          "title": "Session ${SessionId} for ${User} details",
          "type": "row"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "center",
                "cellOptions": {
                  "type": "auto"
                },
                "inspect": false,
                "minWidth": 50
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Duration"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "m"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 3,
            "w": 19,
            "x": 0,
            "y": 1
          },
          "id": 54,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "query": "fields = [\"_time\", \"GameName\", \"user\", \"CarModel\", \"TrackCode\", \"SessionId\", \"SessionType\"]\r\njfields = [\"GameName\", \"user\", \"CarModel\", \"TrackCode\", \"SessionId\", \"SessionType\"]\r\n\r\ndata = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"CurrentLapTime\")\r\n  |> keep(columns: fields)\r\n\r\nmin = data\r\n  |> first(column: \"_time\")\r\n\r\nmax = data\r\n  |> last(column: \"_time\")\r\n\r\njoin(tables: {min: min, max: max}, on: jfields, method: \"inner\")\r\n  |> group()  \r\n  |> map(fn: (r) => ({r with Duration: float(v: int(v: duration(v: uint(v: r._time_max) - uint(v: r._time_min))))/60000000000.0}))\r\n  |> drop(columns: [\"SessionId\",  \"user\" ])\r\n  |> yield()",
              "refId": "A"
            }
          ],
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "CarModel": 4,
                  "Duration": 3,
                  "GameName": 5,
                  "SessionId": 8,
                  "SessionType": 7,
                  "TrackCode": 6,
                  "_time_max": 2,
                  "_time_min": 1,
                  "user": 0
                },
                "renameByName": {
                  "Duration": "",
                  "_time_max": "Stop",
                  "_time_min": "Start",
                  "user": "User"
                }
              }
            }
          ],
          "transparent": true,
          "type": "table"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "center",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": false,
                "inspect": false,
                "minWidth": 50
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 16,
            "x": 0,
            "y": 4
          },
          "id": 58,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "frameIndex": 1,
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "Strength Of Field"
              }
            ]
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "query": "import \"influxdata/influxdb/schema\"\r\nfrom(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> limit(n:1)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^(Session_CarNumber|Session_iRating|Session_StrengthOfField|Track_Length)$/)\r\n  |> schema.fieldsAsCols() \r\n  |> drop(columns: [\"GameName\",  \"CarModel\", \"TrackCode\", \"SessionId\", \"_time\", \"_start\",\"_stop\", \"SessionType\", \"_measurement\", \"host\", \"topic\", \"UserId\", \"user\" ])\r\n  |> group(columns: [])\r\n  |> limit(n:1)\r\n\r\n",
              "refId": "A"
            }
          ],
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {
                  "CountryCode": 2,
                  "Driver": 1,
                  "Session_CarNumber": 0,
                  "Session_iRating": 4,
                  "Team": 3
                },
                "renameByName": {
                  "Duration": "Minutes",
                  "Session_CarNumber": "CarNumber",
                  "Session_StrengthOfField": "Strength Of Field",
                  "Session_iRating": "iRating",
                  "Track_Length": "Track Length",
                  "_time_max": "Stop",
                  "_time_min": "Start",
                  "_value": "Car Number",
                  "user": "User"
                }
              }
            }
          ],
          "transparent": true,
          "type": "table"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 11,
          "panels": [],
          "title": "Tyres Position Penalties",
          "type": "row"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-blue",
                    "value": null
                  },
                  {
                    "color": "dark-yellow",
                    "value": 70
                  },
                  {
                    "color": "dark-green",
                    "value": 80
                  },
                  {
                    "color": "dark-orange",
                    "value": 90
                  },
                  {
                    "color": "dark-red",
                    "value": 100
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "BrakeTemp"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "light-blue",
                          "value": null
                        },
                        {
                          "color": "light-green",
                          "value": 350
                        },
                        {
                          "color": "light-red",
                          "value": 650
                        }
                      ]
                    }
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 0,
            "y": 8
          },
          "id": 41,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Core",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Left_CenterTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre Core\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()\r\n ",
              "refId": "TyreCore",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_CenterTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Brake",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Left_BrakeTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Brake\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "BrakeTemp",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_BrakeTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Front Left Temp",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-blue",
                    "value": null
                  },
                  {
                    "color": "dark-yellow",
                    "value": 70
                  },
                  {
                    "color": "dark-green",
                    "value": 80
                  },
                  {
                    "color": "dark-orange",
                    "value": 90
                  },
                  {
                    "color": "dark-red",
                    "value": 100
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "BrakeTemp"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "light-blue",
                          "value": null
                        },
                        {
                          "color": "light-green",
                          "value": 350
                        },
                        {
                          "color": "light-red",
                          "value": 650
                        }
                      ]
                    }
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 5,
            "y": 8
          },
          "id": 36,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Core",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Right_CenterTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre Core\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()\r\n ",
              "refId": "TyreCore",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_CenterTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Brake",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Right_BrakeTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Brake\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "BrakeTemp",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_BrakeTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Front Right Temp",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-RdYlGr"
              },
              "decimals": 0,
              "mappings": [],
              "min": 1,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 2,
            "x": 10,
            "y": 8
          },
          "id": 22,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "vertical",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {
              "titleSize": 1
            },
            "textMode": "value"
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Session_Position_Overall\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Position\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Session_Position_Overall"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Position",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-RdYlGr"
              },
              "decimals": 0,
              "mappings": [],
              "min": 1,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 2,
            "x": 12,
            "y": 8
          },
          "id": 24,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {
              "titleSize": 1
            },
            "textMode": "auto"
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Session_NumCars_Overall\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Opponents\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Session_NumCars_Overall"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Opponents ",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "decimals": 2,
              "mappings": [],
              "min": 19,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 26
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 27
                  }
                ]
              },
              "unit": "pressurepsi"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Tyre"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "text",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Wear"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "percentage",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  {
                    "id": "max"
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  },
                  {
                    "id": "min",
                    "value": 0
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "x10"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 14,
            "y": 8
          },
          "id": 8,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Left_Pressure\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyrePressure",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Wear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Left_PercentWear\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n      \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Wear\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyreWear",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPercentWear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Front Left (PSI-Wear)",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "x10",
                "binary": {
                  "left": "Tyre",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "10"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "PSI",
                "binary": {
                  "left": "x10",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "70.3070"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": false
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "decimals": 2,
              "mappings": [],
              "min": 19,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 26
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 27
                  }
                ]
              },
              "unit": "pressurepsi"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Tyre"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "text",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Wear"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "percentage",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  {
                    "id": "max"
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  },
                  {
                    "id": "min",
                    "value": 0
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "x10"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 19,
            "y": 8
          },
          "id": 42,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Right_Pressure\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyrePressure",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Wear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Front_Right_PercentWear\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n      \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Wear\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyreWear",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPercentWear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Front Right (PSI-Wear)",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "x10",
                "binary": {
                  "left": "Tyre",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "10"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "PSI",
                "binary": {
                  "left": "x10",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "70.3070"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": false
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-RdYlGr"
              },
              "decimals": 0,
              "mappings": [],
              "min": -1,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 10,
            "y": 12
          },
          "id": 23,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Penalties_CutTrackWarnings\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Cuts\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_CutTrackWarnings"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Cuts",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-RdYlGr"
              },
              "decimals": 0,
              "mappings": [],
              "min": -1,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 12,
            "y": 12
          },
          "id": 45,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Penalties_Incidents\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Incidents\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_CutTrackWarnings"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Incidents",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-blue",
                    "value": null
                  },
                  {
                    "color": "dark-yellow",
                    "value": 70
                  },
                  {
                    "color": "dark-green",
                    "value": 80
                  },
                  {
                    "color": "dark-orange",
                    "value": 90
                  },
                  {
                    "color": "dark-red",
                    "value": 100
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "BrakeTemp"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "light-blue",
                          "value": null
                        },
                        {
                          "color": "light-green",
                          "value": 350
                        },
                        {
                          "color": "light-red",
                          "value": 650
                        }
                      ]
                    }
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 0,
            "y": 13
          },
          "id": 39,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Core",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Left_CenterTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre Core\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()\r\n ",
              "refId": "TyreCore",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_CenterTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Brake",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Left_BrakeTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Brake\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "BrakeTemp",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_BrakeTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Rear Left Temp",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-blue",
                    "value": null
                  },
                  {
                    "color": "dark-yellow",
                    "value": 70
                  },
                  {
                    "color": "dark-green",
                    "value": 80
                  },
                  {
                    "color": "dark-orange",
                    "value": 90
                  },
                  {
                    "color": "dark-red",
                    "value": 100
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "BrakeTemp"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "light-blue",
                          "value": null
                        },
                        {
                          "color": "light-green",
                          "value": 350
                        },
                        {
                          "color": "light-red",
                          "value": 650
                        }
                      ]
                    }
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 5,
            "y": 13
          },
          "id": 40,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Core",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Right_CenterTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre Core\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()\r\n ",
              "refId": "TyreCore",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_CenterTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Brake",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Right_BrakeTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Brake\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "BrakeTemp",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_BrakeTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Rear Right Temp",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "decimals": 2,
              "mappings": [],
              "min": 19,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 26
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 27
                  }
                ]
              },
              "unit": "pressurepsi"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Tyre"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "text",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Wear"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "percentage",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  {
                    "id": "max"
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  },
                  {
                    "id": "min",
                    "value": 0
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "x10"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 14,
            "y": 13
          },
          "id": 43,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Left_Pressure\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyrePressure",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Wear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Left_PercentWear\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n      \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Wear\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyreWear",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPercentWear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Rear Left (PSI-Wear)",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "x10",
                "binary": {
                  "left": "Tyre",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "10"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "PSI",
                "binary": {
                  "left": "x10",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "70.3070"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": false
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "decimals": 2,
              "mappings": [],
              "min": 19,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 26
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 27
                  }
                ]
              },
              "unit": "pressurepsi"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Tyre"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "text",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Wear"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "percentage",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    }
                  },
                  {
                    "id": "max"
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  },
                  {
                    "id": "min",
                    "value": 0
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "x10"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 5,
            "x": 19,
            "y": 13
          },
          "id": 44,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Right_Pressure\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Tyre\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyrePressure",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Wear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"TyreData_Rear_Right_PercentWear\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n      \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Wear\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "TyreWear",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPercentWear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Rear Right (PSI-Wear)",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "x10",
                "binary": {
                  "left": "Tyre",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "10"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            },
            {
              "id": "calculateField",
              "options": {
                "alias": "PSI",
                "binary": {
                  "left": "x10",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "70.3070"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": false
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "continuous-RdYlGr"
              },
              "decimals": 0,
              "mappings": [],
              "min": -1,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 10,
            "y": 15
          },
          "id": 46,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Penalties_Total\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Penalties\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_CutTrackWarnings"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Penalties",
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [],
              "min": 0,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "orange",
                    "value": 0.1
                  },
                  {
                    "color": "yellow",
                    "value": 0.25
                  },
                  {
                    "color": "#88bf69",
                    "value": 0.5
                  },
                  {
                    "color": "dark-green",
                    "value": 0.6
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 2,
            "x": 12,
            "y": 15
          },
          "id": 51,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"FuelData_FuelCapacity\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"FuelCapacity\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "FuelCapacity",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Wear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"FuelData_FuelLeft\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n      \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"FuelLeft\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "FuelLeft",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPercentWear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Fuel %",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "Fuel%",
                "binary": {
                  "left": "FuelLeft",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "FuelCapacity"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": true
              }
            }
          ],
          "transparent": true,
          "type": "stat"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 18
          },
          "id": 4,
          "panels": [],
          "title": "Time Speed Inputs",
          "type": "row"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "purple",
                "mode": "fixed"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "Lap time",
                "axisPlacement": "left",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 51,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [
                {
                  "options": {
                    "1": {
                      "color": "green",
                      "index": 0
                    },
                    "2": {
                      "color": "purple",
                      "index": 1
                    },
                    "3": {
                      "color": "yellow",
                      "index": 2
                    },
                    "4": {
                      "color": "#a5f700",
                      "index": 3
                    },
                    "5": {
                      "color": "semi-dark-blue",
                      "index": 4
                    },
                    "6": {
                      "color": "#ba05f7",
                      "index": 5
                    },
                    "7": {
                      "color": "#0affb9",
                      "index": 6
                    }
                  },
                  "type": "value"
                }
              ],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "custom.axisLabel",
                    "value": "Valid Laps"
                  },
                  {
                    "id": "unit",
                    "value": "none"
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  },
                  {
                    "id": "decimals",
                    "value": 0
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 10,
            "x": 0,
            "y": 19
          },
          "id": 18,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": false
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Last Lap",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"LapTimePrevious\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Last Lap\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_LapTimePrevious"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Lap",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"CurrentLap\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Lap\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_CurrentLap"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Last Lap",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "#be60f2",
                "mode": "fixed"
              },
              "decimals": 0,
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "light-red",
                    "value": null
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 10,
            "y": 19
          },
          "id": 6,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "center",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "value_and_name"
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "alias": "maxspeedms",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1m"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"SpeedMs\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1m, fn: max, createEmpty: true)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"maxspeedms\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_SpeedMs"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Top Speed",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "${Speed:text}",
                "binary": {
                  "left": "_value",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "${Speed}"
                },
                "mode": "binary",
                "reduce": {
                  "include": [
                    "mqtt_consumer.last"
                  ],
                  "reducer": "sum"
                },
                "replaceFields": true
              }
            }
          ],
          "transparent": true,
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "log": 2,
                  "type": "symlog"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "B"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Delta Behind"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "A"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Delta Front"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 5,
            "w": 10,
            "x": 14,
            "y": 19
          },
          "id": 20,
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Delta Front",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Session_Delta_Front\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Delta_Front\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_DeltaFront"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Delta Behind",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Session_Delta_Behind\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Delta_Behind\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_DeltaBehind"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Deltas",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "left",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "_value 1"
                },
                "properties": [
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "_value 2"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "displayName",
                    "value": "Sector"
                  },
                  {
                    "id": "max",
                    "value": 3
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 24,
            "x": 0,
            "y": 24
          },
          "id": 16,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "maxspeedms",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"SpeedMs\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"maxspeedms\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_SpeedMs"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Section",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Session_Sector\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Sector\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "B",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Sector"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Speed",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "${Speed:text}",
                "binary": {
                  "left": "_value 1",
                  "operator": "*",
                  "reducer": "sum",
                  "right": "${Speed}"
                },
                "mode": "binary",
                "reduce": {
                  "include": [
                    "mqtt_consumer.last"
                  ],
                  "reducer": "sum"
                },
                "replaceFields": false
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 28,
                "gradientMode": "scheme",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "SteeringAngle"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "none"
                  },
                  {
                    "id": "custom.fillOpacity",
                    "value": 22
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "super-light-orange",
                      "mode": "fixed",
                      "seriesBy": "min"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "SteeringAngle"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "Brake"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "dark-red",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Brake"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "Throttle"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "dark-green",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Throttle"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "Clutch"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Clutch"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "orange",
                      "mode": "fixed"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "Handbrake"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Handbrake"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "dark-blue",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 30
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Brake",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Brake\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"Brake\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Brake\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Brake",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Brake"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Throttle",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Throttle\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"Throttle\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Throttle\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Throttle",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Throttle"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Steer",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"SteeringAngle\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"SteeringAngle\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"SteeringAngle\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "SteeringAngle",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_SteeringAngle"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Throttle",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Clutch\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"Clutch\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Clutch\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Clutch",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Throttle"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Throttle",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "autogen",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Handbrake\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"Handbrake\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Handbrake\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Handbrake",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Throttle"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Inputs",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 39
          },
          "id": 52,
          "panels": [],
          "title": "Engine Data ",
          "type": "row"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "series",
                "axisLabel": "RPMs",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "Gear"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "displayName",
                    "value": "Gear"
                  },
                  {
                    "id": "custom.axisLabel",
                    "value": "Gears"
                  },
                  {
                    "id": "custom.lineInterpolation",
                    "value": "stepBefore"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "RPM"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "RPM"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "MaxRPM"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Max RPM"
                  },
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "dark-red",
                      "mode": "fixed"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 24,
            "x": 0,
            "y": 40
          },
          "id": 35,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"EngineData_EngineRpm\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"EngineData_EngineRpm\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"EngineData_EngineRpm\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "RPM",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Rpms"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Gear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Gear\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1s, fn: last, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"Gear\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Gear\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Gear",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Gear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Max",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"EngineData_MaxEngineRpm\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"EngineData_MaxEngineRpm\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"EngineData_MaxEngineRpm\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "MaxRPM",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_EngineData_MaxEngineRpm"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Engine RPMs",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds",
                "seriesBy": "last"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "series",
                "axisLabel": "%",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "decimals": 0,
              "mappings": [],
              "max": 1,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "super-light-yellow",
                    "value": null
                  },
                  {
                    "color": "light-blue",
                    "value": 0
                  },
                  {
                    "color": "dark-green",
                    "value": 0.55
                  },
                  {
                    "color": "dark-red",
                    "value": 0.9
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 24,
            "x": 0,
            "y": 46
          },
          "id": 47,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"EngineData_EngineRpm\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"EngineData_EngineRpm\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"EngineData_EngineRpm\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "RPM",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Rpms"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Max",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"EngineData_MaxEngineRpm\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"SessionId\",\"_value\",\"_time\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n  |> group(columns: [\"SessionId\"])\r\n  |> set(key: \"_field\", value: \"EngineData_MaxEngineRpm\")\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"EngineData_MaxEngineRpm\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "MaxRPM",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_EngineData_MaxEngineRpm"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Engine RPM %",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "%RPM",
                "binary": {
                  "left": "_value 1",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "_value 2"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                },
                "replaceFields": true
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "yellow",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-blue",
                    "value": null
                  },
                  {
                    "color": "dark-yellow",
                    "value": 70
                  },
                  {
                    "color": "dark-green",
                    "value": 80
                  },
                  {
                    "color": "dark-orange",
                    "value": 100
                  },
                  {
                    "color": "dark-red",
                    "value": 143
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "EngineOilTemp"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "blue",
                          "value": null
                        },
                        {
                          "color": "light-green",
                          "value": 82
                        },
                        {
                          "color": "orange",
                          "value": 104
                        },
                        {
                          "color": "red",
                          "value": 140
                        }
                      ]
                    }
                  },
                  {
                    "id": "custom.scaleDistribution",
                    "value": {
                      "type": "linear"
                    }
                  },
                  {
                    "id": "custom.thresholdsStyle",
                    "value": {
                      "mode": "dashed"
                    }
                  },
                  {
                    "id": "displayName",
                    "value": "Oil"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byFrameRefID",
                  "options": "WaterTemp"
                },
                "properties": [
                  {
                    "id": "displayName",
                    "value": "Water"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 9,
            "x": 0,
            "y": 52
          },
          "id": 48,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Core",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "\r\nFinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"EngineData_EngineWaterTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"EngineData_EngineWaterTemp\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()\r\n ",
              "refId": "WaterTemp",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_CenterTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Brake",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "0"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"EngineData_EngineOilTemp\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n\r\n\r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"EngineData_EngineOilTemp\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "EngineOilTemp",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TyreData_Front_Left_BrakeTemp"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Engine Temps",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 26
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 27
                  }
                ]
              },
              "unit": "litre"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 8,
            "x": 9,
            "y": 52
          },
          "id": 50,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"FuelData_FuelCapacity\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"FuelCapacity\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "FuelCapacity",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Wear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"FuelData_FuelLeft\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n      \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"FuelLeft\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "FuelLeft",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPercentWear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Fuel",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "area"
                }
              },
              "mappings": [],
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 26
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 27
                  }
                ]
              },
              "unit": "pressurepsi"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Tyre"
                },
                "properties": [
                  {
                    "id": "color",
                    "value": {
                      "fixedColor": "text",
                      "mode": "fixed"
                    }
                  },
                  {
                    "id": "custom.axisPlacement",
                    "value": "hidden"
                  },
                  {
                    "id": "custom.hideFrom",
                    "value": {
                      "legend": true,
                      "tooltip": true,
                      "viz": true
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 6,
            "w": 7,
            "x": 17,
            "y": 52
          },
          "id": 49,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"EngineData_EngineOilPressure\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Oil\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Oil",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Wear",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"FuelData_FuelPressure\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n      \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Fuel\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Fuel",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPercentWear"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Engine PSI",
          "transformations": [],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 58
          },
          "id": 55,
          "panels": [],
          "title": "Weather Distance Flags",
          "type": "row"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 16,
                "gradientMode": "opacity",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 2,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "celsius"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 24,
            "x": 0,
            "y": 59
          },
          "id": 31,
          "options": {
            "legend": {
              "calcs": [
                "min",
                "mean",
                "max"
              ],
              "displayMode": "table",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Ambient Temp",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Conditions_Temperature_Ambient\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Ambient\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Ambient",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_AmbientTemperature"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "alias": "Track Temp",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Conditions_Temperature_Track\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Track\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Track",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_TrackTemperature"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Temperature Conditions",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 97,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "stepBefore",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "decimals": 0,
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "transparent",
                    "value": null
                  },
                  {
                    "color": "dark-green",
                    "value": 0
                  },
                  {
                    "color": "dark-yellow",
                    "value": 1
                  },
                  {
                    "color": "dark-blue",
                    "value": 3
                  },
                  {
                    "color": "#ffffff",
                    "value": 6
                  },
                  {
                    "color": "#343434",
                    "value": 7
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 63
          },
          "id": 33,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Flag",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Session_Flag\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Flag\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_Flag"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            }
          ],
          "title": "Flag",
          "transparent": true,
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_RACING}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "orange",
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 12,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "min": 0,
              "noValue": "0",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 26
                  },
                  {
                    "color": "semi-dark-red",
                    "value": 27
                  }
                ]
              },
              "unit": "lengthm"
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "%"
                },
                "properties": [
                  {
                    "id": "custom.axisPlacement",
                    "value": "right"
                  },
                  {
                    "id": "unit",
                    "value": "percentunit"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 63
          },
          "id": 56,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "targets": [
            {
              "alias": "Tyre",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "groupBy": [
                {
                  "params": [
                    "1s"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "mqtt_consumer",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"DistanceRoundTrack\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Distance\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Distance",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "telemetry_FrontLeftPressure"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "max"
                  }
                ]
              ],
              "tags": []
            },
            {
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_RACING}"
              },
              "hide": false,
              "query": "FinalOutput = [\"_field\", \"_time\", \"_value\"]\r\n\r\nRawSeries = from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r._field == \"Track_Length\" )\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> filter(fn: (r) => r[\"SessionId\"] == \"${SessionId}\")\r\n  |> keep(columns: [\"CarModel\", \"_field\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: 1s, fn: max, createEmpty: false)\r\n     \r\nNamedSeries = RawSeries\r\n  |> map(fn: (r) => ({_value:r._value, _time:r._time, _field:\"Track Length\"}))\r\n  |> keep(columns:FinalOutput)\r\n\r\nNamedSeries |> yield()",
              "refId": "Track_Length"
            }
          ],
          "title": "Distance in Meters",
          "transformations": [
            {
              "id": "calculateField",
              "options": {
                "alias": "%",
                "binary": {
                  "left": "Distance",
                  "operator": "/",
                  "reducer": "sum",
                  "right": "Track Length"
                },
                "mode": "binary",
                "reduce": {
                  "reducer": "sum"
                }
              }
            }
          ],
          "transparent": true,
          "type": "timeseries"
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 71
          },
          "id": 57,
          "panels": [],
          "title": "Work In Progress",
          "type": "row"
        }
      ],
      "refresh": "",
      "revision": 1,
      "schemaVersion": 38,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": true,
              "text": "Km/h",
              "value": "3.6"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Speed",
            "multi": false,
            "name": "Speed",
            "options": [
              {
                "selected": true,
                "text": "Km/h",
                "value": "3.6"
              },
              {
                "selected": false,
                "text": "MPH",
                "value": "2.236936292054"
              }
            ],
            "query": "Km/h : 3.6 , MPH : 2.236936292054",
            "queryValue": "",
            "skipUrlSync": false,
            "type": "custom"
          },
          {
            "current": {
              "isNone": true,
              "selected": false,
              "text": "None",
              "value": ""
            },
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_RACING}"
            },
            "definition": "from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"Gear\")\r\n  |> keep(columns: [\"user\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> first()\r\n  |> group(columns: [])\r\n  |> drop(columns: [\"_value\",\"_time\"])",
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "User",
            "options": [],
            "query": "from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"Gear\")\r\n  |> keep(columns: [\"user\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> first()\r\n  |> group(columns: [])\r\n  |> drop(columns: [\"_value\",\"_time\"])",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "type": "query"
          },
          {
            "current": {
              "isNone": true,
              "selected": false,
              "text": "None",
              "value": ""
            },
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_RACING}"
            },
            "definition": "from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"Gear\")\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> keep(columns: [\"SessionId\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> first()\r\n  |> group(columns: [])\r\n  |> drop(columns: [\"_value\",\"_time\"])",
            "hide": 0,
            "includeAll": false,
            "label": "SessionId",
            "multi": false,
            "name": "SessionId",
            "options": [],
            "query": "from(bucket: \"racing\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laps_cc\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"Gear\")\r\n  |> filter(fn: (r) => r.user == \"${User}\")\r\n  |> keep(columns: [\"SessionId\", \"_time\", \"_value\"])\r\n  |> sort(columns: [\"_time\"], desc: false)\r\n  |> first()\r\n  |> group(columns: [])\r\n  |> drop(columns: [\"_value\",\"_time\"])",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 3,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Session Details Extended",
      "uid": "e12c7ccb-ff51-4525-b5da-0d783a1019ef",
      "version": 41,
      "weekStart": ""
    }
