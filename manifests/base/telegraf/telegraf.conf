[agent]
collection_jitter = "0s"
debug = true
flush_interval = "2s"
flush_jitter = "0s"
hostname = "$HOSTNAME"
interval = "1s"
logfile = ""
metric_batch_size = 1000
metric_buffer_limit = 10000
omit_hostname = false
precision = ""
quiet = false
round_interval = true

[[processors.enum]]
[[processors.enum.mapping]]
dest = "status_code"
field = "status"

[processors.enum.mapping.value_mappings]
critical = 3
healthy = 1
problem = 2

# Collect statistics about itself
[[inputs.internal]]
## If true, collect telegraf memory stats.
collect_memstats = true

# SimHub configuration
[[inputs.mqtt_consumer]]
data_format = "json_v2"
username = "$USERNAME"
password = "$PASSWORD"
servers = ["tcp://mosquitto-mqtt:1883"]
topics = [
"racing/#",
]

[[inputs.mqtt_consumer.topic_parsing]]
topic = "racing/+/+/+/+/+/+/+"
# measurement = "measurement/_"
tags = "_/user/UserId/SessionId/GameName/TrackCode/CarModel/SessionTypeName"
# fields = "_/_/_/test"

[inputs.mqtt_consumer.topic_parsing.types]
CarModel = "string"
GameName = "string"
SessionId = "string"
TrackCode = "string"
UserId = "string"
user = "string"

[[inputs.mqtt_consumer.json_v2]]
measurement_name = "laps"
# dont use the timestamp from the message, since it is not reliable
# timestamp will be set to the time the message was received
# timestamp_format = "unix_ms"
# timestamp_path = "time"
# timestamp_timezone = "UTC"

# [[inputs.mqtt_consumer.json_v2.tag]]
# path = "userId"
# type = "text"

# [[inputs.mqtt_consumer.json_v2.field]]
# path = "carState.CarCoordinates.0"
# rename = "world_x"

[[inputs.mqtt_consumer.json_v2.object]]
disable_prepend_keys = true
path = "telemetry"
# timestamp_key = "time"
# excluded_keys = ["CarCoordinates"]
# tags = ["CarModel", "CarClass"]

# CrewChief v1 configuration
[[inputs.mqtt_consumer]]
servers = ["tcp://mosquitto-mqtt:1883"]
topics = [
"crewchief/#"
]
username = "$USERNAME"
password = "$PASSWORD"
data_format = "json_v2"

[[inputs.mqtt_consumer.topic_parsing]]
topic = "crewchief/+/+/+/+/+/+"
tags = "_/user/SessionId/GameName/TrackCode/CarModel/SessionTypeName"
[inputs.mqtt_consumer.topic_parsing.types]
user = "string"
SessionId = "string"
GameName = "string"
TrackCode = "string"
CarModel = "string"
SessionTypeName = "string"

[[inputs.mqtt_consumer.json_v2]]
measurement_name = "laps_cc"
# dont use the timestamp from the message, since it is not reliable
# timestamp will be set to the time the message was received
# timestamp_path = "time"
# timestamp_format = "unix_ms"
# timestamp_timezone = "UTC"

[[inputs.mqtt_consumer.json_v2.object]]
path = "telemetry"
# timestamp_key = "time"
disable_prepend_keys = true
tags = ["CurrentLap", "CarClass"]

# CrewChief v2 configuration
[[inputs.mqtt_consumer]]
servers = ["tcp://mosquitto-mqtt:1883"]
topics = [
"crewchief_v2/#"
]
username = "$USERNAME"
password = "$PASSWORD"
data_format = "json_v2"

[[inputs.mqtt_consumer.topic_parsing]]
topic = "crewchief_v2/+/+/+/+/+/+/+"
tags = "_/user/SessionId/GameName/TrackCode/CarModel/SessionTypeName/CurrentLap"
[inputs.mqtt_consumer.topic_parsing.types]
user = "string"
SessionId = "string"
GameName = "string"
TrackCode = "string"
CarModel = "string"
SessionTypeName = "string"
CurrentLap = "int"

[[inputs.mqtt_consumer.json_v2]]
measurement_name = "laps_cc"
# dont use the timestamp from the message, since it is not reliable
# timestamp will be set to the time the message was received
# timestamp_path = "time"
# timestamp_format = "unix_ms"
# timestamp_timezone = "UTC"

[[inputs.mqtt_consumer.json_v2.object]]
path = "telemetry"
timestamp_key = "time"
disable_prepend_keys = true

[[outputs.influxdb_v2]]
bucket = "racing"
organization = "b4mad"
token = "$INFLUX_TOKEN"
urls = ["http://influxdb2:8086"]
namepass = ["laps*"]

# Configuration for the Prometheus client to spawn
[[outputs.prometheus_client]]
## Address to listen on.
listen = ":9090"
namepass = ["internal_*"]
