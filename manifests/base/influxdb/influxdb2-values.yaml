# global:
#   imageRegistry: ""
#   ## E.g.
#   ## imagePullSecrets:
#   ##   - myRegistryKeySecretName
#   ##
#   imagePullSecrets: []
#   storageClass: ""

# image:
#   registry: docker.io
#   repository: bitnami/influxdb
#   tag: 2.5.1-debian-11-r7
#   pullPolicy: IfNotPresent
#   pullSecrets: []
#   debug: false

architecture: standalone
# clusterDomain: "asd"
# nameOverride: "xyz"
# fullnameOverride: horst

auth:
  enabled: true
  existingSecret: "influxdb2-auth"
  usePasswordFiles: false
  admin:
    username: admin
    org: b4mad
    bucket: racing
    retention: 30d
  readUser:
    username: reader
  writeUser:
    username: writer
  createUserToken: false

influxdb:
  # initdbScriptsSecret: influxdb2-auth
  # initdbScripts:
  #   creata_db.sh: |
  #     influx -host localhost -port "$INFLUXDB_HTTP_PORT_NUMBER" -username "${INFLUXDB_ADMIN_USER}" -password "${INFLUXDB_ADMIN_USER_PASSWORD}" -execute "create database agentMetrix;"
  existingConfiguration: influx-config
  extraEnvVarsCM: influx-vars
  updateStrategy:
    type: Recreate
  podSecurityContext:
    enabled: false
  containerSecurityContext:
    enabled: false
  resources:
    limits:
      cpu: 200m
      memory: 400M
    # requests:
    #   cpu: 200m
    #   memory: 8Gi

persistence:
  enabled: true
  existingClaim: ""
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 2Gi
  annotations: {}

serviceAccount:
  enabled: true

metrics:
  # disable as `nable to continue with update: could not get information about the resource: servicemonitors.monitoring.coreos.com "b4mad-racing-influxdb2" is forbidden: User "goern" cannot get resource "servicemonitors" in API group "monitoring.coreos.com" in the namespace "b4mad-racing"`
  enabled: false
  service:
    type: ClusterIP
    port: 9122
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
      prometheus.io/path: "/metrics"
    externalTrafficPolicy: Cluster

  serviceMonitor:
    enabled: true

backup:
  enabled: true
  directory: "/backups"
  retentionDays: 4
  cronjob:
    schedule: "0 2 * * *"
    historyLimit: 1
    podAnnotations: {}
    securityContext:
      enabled: false
  # uploadProviders:
  #   aws:
  #     enabled: false
  #     existingSecret: "influxdb2-backup"
  #     bucketName: s3://b4mad-racing-test-influx
